name: Build and commit documentation

on: workflow_dispatch

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    steps:
    - uses: actions/checkout@v2
    - name: Add conda to system path
      run: echo $CONDA/bin >> $GITHUB_PATH
    - name: Restore yml cache
      uses: actions/cache@v2
      id: build-cache
      env:
        cache-name: yml-cache
      with:
        path: build.yml
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('build.yml') }}
    - name: Conda package cache
      uses: actions/cache@v2
      if: ${{!steps.build-cache.cache-hit}}
      env:
        cache-name: pkg-cache
      with:
        path: /usr/share/miniconda/pkgs
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('environment.yml') }}
    - name: Install dependencies
      if: ${{!steps.build-cache.cache-hit}}
      run: | 
        conda env update --file ./fenics_explicit.yml --name base
        conda env config vars set LD_LIBRARY_PATH=~/anaconda3/envs/base/lib
    - name: Create buil yml
      if: ${{!steps.build-cache.cache-hit}}
      run: conda env export --name base > build.yml
  run-test:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
    - uses: actions/checkout@v2
    - name: Add conda to system path
      run: echo $CONDA/bin >> $GITHUB_PATH
    - name: Conda package cache
      uses: actions/cache@v2
      env:
        cache-name: pkg-cache
      with:
        path: /usr/share/miniconda/pkgs
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('environment.yml') }}
    - name: Build yml cache
      uses: actions/cache@v2
      env:
        cache-name: yml-cache
      with:
        path: build.yml
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('build.yml') }}
    - name: Install dependencies
      run: conda env update --file build.yml --name base
    - name: Install package
      run: pip install -e .
    - name: make html
      run: |
        cd docsrc
        make html
